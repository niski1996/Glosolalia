// <auto-generated />
using System;
using Glosolalia.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Glosolalia.Data.Migrations
{
    [DbContext(typeof(GlosolaliaContext))]
    partial class GlosolaliaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Glosolalia.Business.Entities.EnWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastInput")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PartOfSpeechId")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LastInput");

                    b.HasIndex("PartOfSpeechId");

                    b.HasIndex("Progress");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("EnWords");
                });

            modelBuilder.Entity("Glosolalia.Business.Entities.EnWordPlWord", b =>
                {
                    b.Property<int>("IdEnWord")
                        .HasColumnType("int");

                    b.Property<int>("IdPlWord")
                        .HasColumnType("int");

                    b.Property<int?>("EnWordId")
                        .HasColumnType("int");

                    b.Property<int?>("PlWordId")
                        .HasColumnType("int");

                    b.HasKey("IdEnWord", "IdPlWord");

                    b.HasIndex("EnWordId");

                    b.HasIndex("PlWordId");

                    b.ToTable("EnWordPlWord");
                });

            modelBuilder.Entity("Glosolalia.Business.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Glosolalia.Business.Entities.PartOfSpeech", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("PartsOfSpeech");
                });

            modelBuilder.Entity("Glosolalia.Business.Entities.PlWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastInput")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PartOfSpeechId")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LastInput");

                    b.HasIndex("PartOfSpeechId");

                    b.HasIndex("Progress");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("PlWords");
                });

            modelBuilder.Entity("Glosolalia.Business.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Glosolalia.Business.Entities.EnWord", b =>
                {
                    b.HasOne("Glosolalia.Business.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Glosolalia.Business.Entities.PartOfSpeech", "PartOfSpeech")
                        .WithMany()
                        .HasForeignKey("PartOfSpeechId");

                    b.Navigation("Language");

                    b.Navigation("PartOfSpeech");
                });

            modelBuilder.Entity("Glosolalia.Business.Entities.EnWordPlWord", b =>
                {
                    b.HasOne("Glosolalia.Business.Entities.EnWord", null)
                        .WithMany("PlTranslation")
                        .HasForeignKey("EnWordId");

                    b.HasOne("Glosolalia.Business.Entities.PlWord", null)
                        .WithMany("EnTranslation")
                        .HasForeignKey("PlWordId");
                });

            modelBuilder.Entity("Glosolalia.Business.Entities.PlWord", b =>
                {
                    b.HasOne("Glosolalia.Business.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Glosolalia.Business.Entities.PartOfSpeech", "PartOfSpeech")
                        .WithMany()
                        .HasForeignKey("PartOfSpeechId");

                    b.Navigation("Language");

                    b.Navigation("PartOfSpeech");
                });

            modelBuilder.Entity("Glosolalia.Business.Entities.EnWord", b =>
                {
                    b.Navigation("PlTranslation");
                });

            modelBuilder.Entity("Glosolalia.Business.Entities.PlWord", b =>
                {
                    b.Navigation("EnTranslation");
                });
#pragma warning restore 612, 618
        }
    }
}
